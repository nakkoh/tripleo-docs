[tox]
minversion = 2.0
skipsdist = True
envlist = docs,pep8,bindep

[testenv]
basepython = python3
usedevelop = True
setenv = VIRTUAL_ENV={envdir}
deps = -r{toxinidir}/requirements.txt


[testenv:venv]
commands = {posargs}

[testenv:docs]
deps =
  -c{env:UPPER_CONSTRAINTS_FILE:https://releases.openstack.org/constraints/upper/master}
  -r{toxinidir}/doc/requirements.txt
commands =
    sphinx-build -a -E -W -d doc/build/doctrees --keep-going -b html doc/source doc/build/html

[testenv:pdf-docs]
whitelist_externals = make
description =
  Build PDF documentation.
envdir = {toxworkdir}/docs
deps = {[testenv:docs]deps}
commands =
  sphinx-build --keep-going -b latex doc/source doc/build/pdf
  make -C doc/build/pdf

[testenv:pep8]
whitelist_externals = bash
deps = -r{toxinidir}/test-requirements.txt
# We fail pretty horribly on bashate right now
#commands = bash -c "find scripts -type f | xargs bashate -v"
#           flake8
commands = flake8

[flake8]
show-source = True
exclude = .tox,dist,*.egg,build

[testenv:deploy-guide]
deps = {[testenv:docs]deps}
commands = sphinx-build -a -E -W -d deploy-guide/build/doctrees --keep-going -b html deploy-guide/source deploy-guide/build/html

[testenv:bindep]
# Do not install any requirements. We want this to be fast and work even if
# system dependencies are missing, since it's used to tell you what system
# dependencies are missing! This also means that bindep must be installed
# separately, outside of the requirements files, and develop mode disabled
# explicitly to avoid unnecessarily installing the checked-out repo too (this
# further relies on "tox.skipsdist = True" above).
usedevelop = False
deps = bindep
commands =
  bindep test
